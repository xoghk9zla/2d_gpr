#include <GL/glut.h>
#include<time.h>
#include <stdlib.h>
GLvoid drawScene(GLvoid);
GLvoid reshape(int w, int h);

void main(int argc, char** argv) {
	glutInit(&argc, argv);    // glut 초기화
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);  // 디스플레이 모드 설정 
	glutInitWindowPosition(100, 100);   // 윈도우의 위치 지정
	glutInitWindowSize(800, 600);    // 윈도우의 크기 지정 
	glutCreateWindow("실습2");   // 윈도우 생성 (윈도우 이름) 
	glutDisplayFunc(drawScene);    // 출력 함수의 지정 
	glutReshapeFunc(reshape);   // 다시 그리기 함수 지정 
	glutMainLoop();    // 이벤트 처리 시작 
}

GLvoid drawScene() {     // 출력 함수 
	float x = 0, y = 0;
	srand((unsigned)time(NULL));
	int n = rand() % 8 + 2;
	glClearColor(1.0f, 0.0f, 0.8f, 1.0f);
	glClear(GL_COLOR_BUFFER_BIT);   // 설정된 색으로 젂체를 칠하기

	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j){
			if (i % 2 == 0){
				if (j % 2 == 0){
					glColor4f(1.0f, 0.0f, 0.0f, 1.0f);
					glRectd(x, y, x + (800 / n), y + (600 / n));
				}
				else if (j % 2 != 0){
					glColor4f(0.0f, 1.0f, 0.0f, 1.0f);
					glRectd(x, y, x + (800 / n), y + (600 / n));
				}
			}
			else{
				if (j % 2 != 0){
					glColor4f(1.0f, 0.0f, 0.0f, 1.0f);
					glRectd(x, y, x + (800 / n), y + (600 / n));
				}
				else if (j % 2 == 0){
					glColor4f(0.0f, 1.0f, 0.0f, 1.0f);
					glRectf(x, y, x + (800 / n), y + (600 / n));
				}
			}
			x += 800 / n;
		}
		x = 0;
		y += 600 / n;
	}
	glFlush();      // 화면에 출력하기 
}
GLvoid reshape(int w, int h) {    // 다시 그리기 함수
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0, w, 0.0, h, -1.0, 1.0);
}