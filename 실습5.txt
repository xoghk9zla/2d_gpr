#include <GL/glut.h>
#include <stdlib.h>
GLvoid drawScene(GLvoid);
GLvoid reshape(int w, int h);
void Mouse(int button, int state, int x, int y);
void Keyboard(unsigned char key, int x, int y);
void TimerFunction(int value);
void MenuFunc(int button);
struct Rect {
	int x, y, vec;
};
Rect a[10];
int cur = 0, end = 0, timer = 100, shape = 0;
void main(int argc, char** argv) {
	int SubMenu1;
	int MainMenu;
	
	glutInit(&argc, argv);    // glut 초기화
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);  // 디스플레이 모드 설정 
	glutInitWindowPosition(100, 100);   // 윈도우의 위치 지정
	glutInitWindowSize(800, 600);    // 윈도우의 크기 지정 
	glutCreateWindow("실습5");   // 윈도우 생성 (윈도우 이름) 
	glutDisplayFunc(drawScene);    // 출력 함수의 지정 
	glutMouseFunc(Mouse);			// 마우스 입력
	glutKeyboardFunc(Keyboard);		// 키보드 입력
	glutReshapeFunc(reshape);   // 다시 그리기 함수 지정 
	SubMenu1 = glutCreateMenu(MenuFunc);
	glutAddMenuEntry("RECT", 1);
	glutAddMenuEntry("TRIANGLE", 2);
	MainMenu = glutCreateMenu(MenuFunc);
	glutAddSubMenu("Shape", SubMenu1);
	glutAttachMenu(GLUT_MIDDLE_BUTTON);	
	glutMainLoop();    // 이벤트 처리 시작 
}

GLvoid drawScene() {     // 출력 함수 
	glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
	glClear(GL_COLOR_BUFFER_BIT);   // 설정된 색으로 젂체를 칠하기
	glColor4f(0.25f, 0.75f, 0.5f, 1.0f);
	for (int j = 0; j < end; ++j) {
		glBegin(GL_LINE_LOOP);
		if (shape == 0) {
			glVertex2d(a[j].x, 600 - a[j].y);
			glVertex2d(a[j].x, 600 - (a[j].y + 100));
			glVertex2d(a[j].x + 100, 600 - (a[j].y + 100));
			glVertex2d(a[j].x + 100, 600 - a[j].y);
		}
		else {
			glVertex2d(a[j].x, 600 - a[j].y);
			glVertex2d(a[j].x - 50, 600 - (a[j].y + 100));
			glVertex2d(a[j].x + 50, 600 - (a[j].y + 100));
		}
		glEnd();
	}
	glFlush();      // 화면에 출력하기 
}
GLvoid reshape(int w, int h) {    // 다시 그리기 함수
	glViewport(0, 0, w, h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0, w, 0.0, h, -1.0, 1.0);
}
void Mouse(int button, int state, int x, int y) {

	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
		a[cur % 10].x = x;
		a[cur % 10].y = y;
		++cur;
		if (end < 10)
			++end;
	}
	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN) {
		for (int i = 0; i < 10; ++i) {
			a[i].vec = rand() % 4;
		}
		glutTimerFunc(timer, TimerFunction, 1); // 타이머
	}
	glutPostRedisplay();
}
void TimerFunction(int value) {
	for (int i = 0; i < end; ++i) {
		if (a[i].vec == 0) {// 오른위
			++a[i].x;
			--a[i].y;
			if (a[i].x + 100 >= 800) {
				a[i].vec = 1;
			}
			else if (a[i].y <= 0) {
				a[i].vec = 3;
			}
		}
		else if (a[i].vec == 1) {//왼위
			--a[i].x;
			--a[i].y;
			if (a[i].y <= 0) {
				a[i].vec = 2;
			}
			else if (a[i].x <= 0) {
				a[i].vec = 0;
			}
		}
		else if (a[i].vec == 2) {//왼아래
			--a[i].x;
			++a[i].y;
			if (a[i].x < 0) {
				a[i].vec = 3;
			}
			else if (a[i].y + 100 >= 600) {
				a[i].vec = 1;
			}
		}
		else if (a[i].vec == 3) {//오른아래
			++a[i].x;
			++a[i].y;
			if (a[i].y + 100 >= 600) {
				a[i].vec = 0;
			}
			else if (a[i].x + 100 >= 800) {
				a[i].vec = 2;
			}
		}
	}
	glutPostRedisplay();   // 화면 재 출력
	glutTimerFunc(timer, TimerFunction, 1); // 타이머함수 재 설정  
}
void Keyboard(unsigned char key, int x, int y) {
	switch (key)
	{
	case '+':
		if (timer < 10)
			timer -= 10;
		break;
	case '-':
		timer += 20;
		break;
	default:
		break;
	}
	glutTimerFunc(0, TimerFunction, 1); // 타이머함수 재 설정 
}
void MenuFunc(int button) {
	switch (button) {
	case 1:
		shape = 0;
		break;  
	case 2:   
		shape = 1;
		break;  
	} 
	glutPostRedisplay(); 
}